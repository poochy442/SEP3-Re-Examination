@page "/register"
@using Client.Security
@inject UserManager User
@inject HttpClient Http
@inject NavigationManager UriHelper

<h1>Create a new account</h1>

<form @onsubmit="() => CreateUser()">
    <label>Email:</label>
    <input type="text" @bind-value="Email" />
    <br />
    <label>Password:</label>
    <input type="text" @bind-value="Password" />
    <br />
    <input type="submit" value="Create account" />
</form>

@code {
    private string Email { get; set; }
    private string Password { get; set; }
    private string ErrorMessage { get; set; }

    public async Task CreateUser()
    {
        if (Email == null || Email == "")
        {
            ErrorMessage = "You must input username";
            Password = "";
            return;
        }

        if (Password == null || Password == "")
        {
            ErrorMessage = "You must input password";
            Password = "";
            return;
        }

        String HashedPass = UserManager.HashPassword(Password);
        HttpResponseMessage rm = await Http.PostAsJsonAsync<String>($"user/create?username={Email}", HashedPass);
        List<bool> signedUp = await rm.Content.ReadFromJsonAsync<List<bool>>();

        if (signedUp[0])
        {
            ErrorMessage = "Could not create account";
            Password = "";
            return;
        }

        User.LoggedIn = true;
        if (signedUp[1])
        {
            User.Access = UserManager.UserPrivilege.Admin;
        }
        else
        {
            User.Access = UserManager.UserPrivilege.User;
        }

        UriHelper.NavigateTo("schedule");
    }
}
